{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HousingService {\n  //   housingLocationList: HousingLocation[] = [\n  //     {\n  //         id: 0,\n  //         name: 'Acme Fresh Start Housing',\n  //         city: 'Chicago',\n  //         state: 'IL',\n  //         photo: `${this.baseUrl}/bernard-hermant-CLKGGwIBTaY-unsplash.jpg`,\n  //         availableUnits: 4,\n  //         wifi: true,\n  //         laundry: true\n  //     },\n  //     {\n  //         id: 1,\n  //         name: 'A113 Transitional Housing',\n  //         city: 'Santa Monica',\n  //         state: 'CA',\n  //         photo: `${this.baseUrl}/brandon-griggs-wR11KBaB86U-unsplash.jpg`,\n  //         availableUnits: 0,\n  //         wifi: false,\n  //         laundry: true\n  //     },\n  //     {\n  //         id: 2,\n  //         name: 'Warm Beds Housing Support',\n  //         city: 'Juneau',\n  //         state: 'AK',\n  //         photo: `${this.baseUrl}/i-do-nothing-but-love-lAyXdl1-Wmc-unsplash.jpg`,\n  //         availableUnits: 1,\n  //         wifi: false,\n  //         laundry: false\n  //     },\n  //     {\n  //         id: 3,\n  //         name: 'Homesteady Housing',\n  //         city: 'Chicago',\n  //         state: 'IL',\n  //         photo: `${this.baseUrl}/ian-macdonald-W8z6aiwfi1E-unsplash.jpg`,\n  //         availableUnits: 1,\n  //         wifi: true,\n  //         laundry: false\n  //     },\n  //     {\n  //         id: 4,\n  //         name: 'Happy Homes Group',\n  //         city: 'Gary',\n  //         state: 'IN',\n  //         photo: `${this.baseUrl}/krzysztof-hepner-978RAXoXnH4-unsplash.jpg`,\n  //         availableUnits: 1,\n  //         wifi: true,\n  //         laundry: false\n  //     },\n  //     {\n  //         id: 5,\n  //         name: 'Hopeful Apartment Group',\n  //         city: 'Oakland',\n  //         state: 'CA',\n  //         photo: `${this.baseUrl}/r-architecture-JvQ0Q5IkeMM-unsplash.jpg`,\n  //         availableUnits: 2,\n  //         wifi: true,\n  //         laundry: true\n  //     },\n  //     {\n  //         id: 6,\n  //         name: 'Seriously Safe Towns',\n  //         city: 'Oakland',\n  //         state: 'CA',\n  //         photo: `${this.baseUrl}/phil-hearing-IYfp2Ixe9nM-unsplash.jpg`,\n  //         availableUnits: 5,\n  //         wifi: true,\n  //         laundry: true\n  //     },\n  //     {\n  //         id: 7,\n  //         name: 'Hopeful Housing Solutions',\n  //         city: 'Oakland',\n  //         state: 'CA',\n  //         photo: `${this.baseUrl}/r-architecture-GGupkreKwxA-unsplash.jpg`,\n  //         availableUnits: 2,\n  //         wifi: true,\n  //         laundry: true\n  //     },\n  //     {\n  //         id: 8,\n  //         name: 'Seriously Safe Towns',\n  //         city: 'Oakland',\n  //         state: 'CA',\n  //         photo: `${this.baseUrl}/saru-robert-9rP3mxf8qWI-unsplash.jpg`,\n  //         availableUnits: 10,\n  //         wifi: false,\n  //         laundry: false\n  //     },\n  //     {\n  //     id: 9,\n  //     name: 'Capital Safe Towns',\n  //     city: 'Portland',\n  //     state: 'OR',\n  //     photo: `${this.baseUrl}/webaliser-_TPTXZd9mOo-unsplash.jpg`,\n  //     availableUnits: 6,\n  //     wifi: true,\n  //     laundry: true\n  //     }\n  //     ];\n  //constructor() { }\n  constructor(http) {\n    this.http = http;\n    //está configurado para proporcionar una lista de ubicaciones de viviendas\n    //baseUrl = 'https://angular.io/assets/images/tutorials/faa';\n    this.baseUrl = 'https://api.realtor.com/housing'; // EJEMPLO!! no es la buena! URL de mi API REST (Realtor.com API)\n  }\n  //   getAllHousingLocations(): HousingLocation[] {\n  //       return this.housingLocationList;\n  //       }\n  getAllHousingLocations() {\n    return this.http.get(this.baseUrl);\n  }\n  //    getHousingLocationById(id: number): HousingLocation | undefined {\n  //       return this.housingLocationList.find(housingLocation => housingLocation.id === id);\n  //       }\n  getHousingLocationById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  addHousingLocation(housingLocation) {\n    return this.http.post(this.baseUrl, housingLocation);\n  }\n  updateHousingLocation(housingLocation) {\n    return this.http.put(`${this.baseUrl}/${housingLocation.id}`, housingLocation);\n  }\n  deleteHousingLocation(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  //Método de envío en housing.service.ts\n  submitApplication(firstName, lastName, email) {\n    console.log(`Homes application received: firstName: ${firstName}, lastName: ${lastName}, email: ${email}.`);\n  }\n  static #_ = this.ɵfac = function HousingService_Factory(t) {\n    return new (t || HousingService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HousingService,\n    factory: HousingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAcoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IA/G1B;IACA;IAEQ,YAAO,GAAG,iCAAiC,CAAC,CAAC;EA4GZ;EAE3C;EACA;EACA;EAEIC,sBAAsB;IAClB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAoB,IAAI,CAACC,OAAO,CAAC;EACzD;EAGJ;EACA;EACA;EAEIC,sBAAsB,CAACC,EAAU;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAkB,GAAG,IAAI,CAACC,OAAO,IAAIE,EAAE,EAAE,CAAC;EAClE;EAGAC,kBAAkB,CAACC,eAAgC;IAC/C,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAkB,IAAI,CAACL,OAAO,EAAEI,eAAe,CAAC;EACvE;EAGFE,qBAAqB,CAACF,eAAgC;IAClD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAkB,GAAG,IAAI,CAACP,OAAO,IAAII,eAAe,CAACF,EAAE,EAAE,EAAEE,eAAe,CAAC;EACjG;EAGFI,qBAAqB,CAACN,EAAU;IAChC,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACT,OAAO,IAAIE,EAAE,EAAE,CAAC;EACrD;EAGH;EACAQ,iBAAiB,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,KAAa;IACjEC,OAAO,CAACC,GAAG,CAAC,0CAA0CJ,SAAS,eAAeC,QAAQ,YAAYC,KAAK,GAAG,CAAC;EAC9G;EAAC;qBAtJUlB,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAqB,SAAdrB,cAAc;IAAAsB,YAFb;EAAM","names":["HousingService","constructor","http","getAllHousingLocations","get","baseUrl","getHousingLocationById","id","addHousingLocation","housingLocation","post","updateHousingLocation","put","deleteHousingLocation","delete","submitApplication","firstName","lastName","email","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\msolisma\\Desktop\\PILI\\CURSOS\\Angular SEPE\\ejercicios\\homes-app\\projects\\front\\src\\app\\home\\services\\housing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HousingLocation } from '../interfaces/housinglocation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService { \n  //está configurado para proporcionar una lista de ubicaciones de viviendas\n  //baseUrl = 'https://angular.io/assets/images/tutorials/faa';\n\n  private baseUrl = 'https://api.realtor.com/housing'; // EJEMPLO!! no es la buena! URL de mi API REST (Realtor.com API)\n\n  \n//   housingLocationList: HousingLocation[] = [\n//     {\n//         id: 0,\n//         name: 'Acme Fresh Start Housing',\n//         city: 'Chicago',\n//         state: 'IL',\n//         photo: `${this.baseUrl}/bernard-hermant-CLKGGwIBTaY-unsplash.jpg`,\n//         availableUnits: 4,\n//         wifi: true,\n//         laundry: true\n//     },\n//     {\n//         id: 1,\n//         name: 'A113 Transitional Housing',\n//         city: 'Santa Monica',\n//         state: 'CA',\n//         photo: `${this.baseUrl}/brandon-griggs-wR11KBaB86U-unsplash.jpg`,\n//         availableUnits: 0,\n//         wifi: false,\n//         laundry: true\n//     },\n//     {\n//         id: 2,\n//         name: 'Warm Beds Housing Support',\n//         city: 'Juneau',\n//         state: 'AK',\n//         photo: `${this.baseUrl}/i-do-nothing-but-love-lAyXdl1-Wmc-unsplash.jpg`,\n//         availableUnits: 1,\n//         wifi: false,\n//         laundry: false\n//     },\n//     {\n//         id: 3,\n//         name: 'Homesteady Housing',\n//         city: 'Chicago',\n//         state: 'IL',\n//         photo: `${this.baseUrl}/ian-macdonald-W8z6aiwfi1E-unsplash.jpg`,\n//         availableUnits: 1,\n//         wifi: true,\n//         laundry: false\n//     },\n//     {\n//         id: 4,\n//         name: 'Happy Homes Group',\n//         city: 'Gary',\n//         state: 'IN',\n//         photo: `${this.baseUrl}/krzysztof-hepner-978RAXoXnH4-unsplash.jpg`,\n//         availableUnits: 1,\n//         wifi: true,\n//         laundry: false\n//     },\n//     {\n//         id: 5,\n//         name: 'Hopeful Apartment Group',\n//         city: 'Oakland',\n//         state: 'CA',\n//         photo: `${this.baseUrl}/r-architecture-JvQ0Q5IkeMM-unsplash.jpg`,\n//         availableUnits: 2,\n//         wifi: true,\n//         laundry: true\n//     },\n//     {\n//         id: 6,\n//         name: 'Seriously Safe Towns',\n//         city: 'Oakland',\n//         state: 'CA',\n//         photo: `${this.baseUrl}/phil-hearing-IYfp2Ixe9nM-unsplash.jpg`,\n//         availableUnits: 5,\n//         wifi: true,\n//         laundry: true\n//     },\n//     {\n//         id: 7,\n//         name: 'Hopeful Housing Solutions',\n//         city: 'Oakland',\n//         state: 'CA',\n//         photo: `${this.baseUrl}/r-architecture-GGupkreKwxA-unsplash.jpg`,\n//         availableUnits: 2,\n//         wifi: true,\n//         laundry: true\n//     },\n//     {\n//         id: 8,\n//         name: 'Seriously Safe Towns',\n//         city: 'Oakland',\n//         state: 'CA',\n//         photo: `${this.baseUrl}/saru-robert-9rP3mxf8qWI-unsplash.jpg`,\n//         availableUnits: 10,\n//         wifi: false,\n//         laundry: false\n//     },\n//     {\n//     id: 9,\n//     name: 'Capital Safe Towns',\n//     city: 'Portland',\n//     state: 'OR',\n//     photo: `${this.baseUrl}/webaliser-_TPTXZd9mOo-unsplash.jpg`,\n//     availableUnits: 6,\n//     wifi: true,\n//     laundry: true\n//     }\n//     ];\n\n\n    //constructor() { }\n    constructor(private http: HttpClient) {}\n\n//   getAllHousingLocations(): HousingLocation[] {\n//       return this.housingLocationList;\n//       }\n\n    getAllHousingLocations(): Observable<HousingLocation[]> {\n        return this.http.get<HousingLocation[]>(this.baseUrl);\n    }\n\n\n//    getHousingLocationById(id: number): HousingLocation | undefined {\n//       return this.housingLocationList.find(housingLocation => housingLocation.id === id);\n//       }\n\n    getHousingLocationById(id: number): Observable<HousingLocation> {\n        return this.http.get<HousingLocation>(`${this.baseUrl}/${id}`);\n    }\n\n  \n    addHousingLocation(housingLocation: HousingLocation): Observable<HousingLocation> {\n        return this.http.post<HousingLocation>(this.baseUrl, housingLocation);\n      }\n\n\n    updateHousingLocation(housingLocation: HousingLocation): Observable<HousingLocation> {\n        return this.http.put<HousingLocation>(`${this.baseUrl}/${housingLocation.id}`, housingLocation);\n      }\n\n\n    deleteHousingLocation(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n     }\n\n\n  //Método de envío en housing.service.ts\n  submitApplication(firstName: string, lastName: string, email: string) {\n     console.log(`Homes application received: firstName: ${firstName}, lastName: ${lastName}, email: ${email}.`);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}